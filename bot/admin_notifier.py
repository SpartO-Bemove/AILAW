"""
–ú–æ–¥—É–ª—å –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É
"""
import logging
from typing import Optional
from telegram import Bot
from telegram.error import TelegramError
from .config import ADMIN_CHAT_ID, ENABLE_ADMIN_NOTIFICATIONS

logger = logging.getLogger(__name__)

class AdminNotifier:
    """–ö–ª–∞—Å—Å –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É"""
    
    def __init__(self, bot: Bot):
        self.bot = bot
        self.admin_chat_id = ADMIN_CHAT_ID
        self.enabled = ENABLE_ADMIN_NOTIFICATIONS and self.admin_chat_id
        
        if not self.enabled:
            logger.warning("–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –æ—Ç–∫–ª—é—á–µ–Ω—ã –∏–ª–∏ –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω ADMIN_CHAT_ID")
    
    async def send_bug_report(self, user_id: str, user_name: str, report: str):
        """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –æ—Ç—á–µ—Ç –æ–± –æ—à–∏–±–∫–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É"""
        if not self.enabled:
            return
            
        try:
            message = f"""
üêõ **–ù–û–í–´–ô –û–¢–ß–ï–¢ –û–ë –û–®–ò–ë–ö–ï**

üë§ **–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:** {user_name} (ID: `{user_id}`)
üìÖ **–í—Ä–µ–º—è:** {self._get_current_time()}

üìù **–û–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º—ã:**
{report}

---
–î–ª—è –æ—Ç–≤–µ—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ ID: `{user_id}`
            """
            
            await self.bot.send_message(
                chat_id=self.admin_chat_id,
                text=message,
                parse_mode='Markdown'
            )
            logger.info(f"–û—Ç—á–µ—Ç –æ–± –æ—à–∏–±–∫–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id} –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É")
            
        except TelegramError as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –æ—Ç—á–µ—Ç–∞ –æ–± –æ—à–∏–±–∫–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É: {e}")
    
    async def send_improvement_suggestion(self, user_id: str, user_name: str, suggestion: str):
        """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –ø–æ —É–ª—É—á—à–µ–Ω–∏—é –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É"""
        if not self.enabled:
            return
            
        try:
            message = f"""
üí° **–ù–û–í–û–ï –ü–†–ï–î–õ–û–ñ–ï–ù–ò–ï –ü–û –£–õ–£–ß–®–ï–ù–ò–Æ**

üë§ **–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:** {user_name} (ID: `{user_id}`)
üìÖ **–í—Ä–µ–º—è:** {self._get_current_time()}

üí≠ **–ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ:**
{suggestion}

---
–î–ª—è –æ—Ç–≤–µ—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ ID: `{user_id}`
            """
            
            await self.bot.send_message(
                chat_id=self.admin_chat_id,
                text=message,
                parse_mode='Markdown'
            )
            logger.info(f"–ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id} –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É")
            
        except TelegramError as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É: {e}")
    
    async def send_low_rating_alert(self, user_id: str, user_name: str, rating: int, question: str):
        """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –Ω–∏–∑–∫–æ–π –æ—Ü–µ–Ω–∫–µ"""
        if not self.enabled or rating >= 3:  # –£–≤–µ–¥–æ–º–ª—è–µ–º —Ç–æ–ª—å–∫–æ –æ –Ω–∏–∑–∫–∏—Ö –æ—Ü–µ–Ω–∫–∞—Ö
            return
            
        try:
            message = f"""
‚≠ê **–ù–ò–ó–ö–ê–Ø –û–¶–ï–ù–ö–ê –û–¢–í–ï–¢–ê**

üë§ **–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:** {user_name} (ID: `{user_id}`)
‚≠ê **–û—Ü–µ–Ω–∫–∞:** {rating}/5 {'‚≠ê' * rating}
üìÖ **–í—Ä–µ–º—è:** {self._get_current_time()}

‚ùì **–í–æ–ø—Ä–æ—Å:**
{question[:200]}{'...' if len(question) > 200 else ''}

---
–í–æ–∑–º–æ–∂–Ω–æ, —Å—Ç–æ–∏—Ç —É–ª—É—á—à–∏—Ç—å –æ—Ç–≤–µ—Ç –Ω–∞ –ø–æ–¥–æ–±–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã.
            """
            
            await self.bot.send_message(
                chat_id=self.admin_chat_id,
                text=message,
                parse_mode='Markdown'
            )
            logger.info(f"–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –Ω–∏–∑–∫–æ–π –æ—Ü–µ–Ω–∫–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id} –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ")
            
        except TelegramError as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –Ω–∏–∑–∫–æ–π –æ—Ü–µ–Ω–∫–µ: {e}")
    
    async def send_daily_stats(self, stats: dict):
        """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –µ–∂–µ–¥–Ω–µ–≤–Ω—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É"""
        if not self.enabled:
            return
            
        try:
            message = f"""
üìä **–ï–ñ–ï–î–ù–ï–í–ù–ê–Ø –°–¢–ê–¢–ò–°–¢–ò–ö–ê**

üìÖ **–î–∞—Ç–∞:** {self._get_current_date()}

üìà **–ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å:**
‚Ä¢ –í—Å–µ–≥–æ –¥–µ–π—Å—Ç–≤–∏–π: {stats.get('total_actions', 0)}
‚Ä¢ –ó–∞–¥–∞–Ω–æ –≤–æ–ø—Ä–æ—Å–æ–≤: {stats.get('ask_question', 0)}
‚Ä¢ –ü—Ä–æ–≤–µ—Ä–µ–Ω–æ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤: {stats.get('check_document', 0)}
‚Ä¢ –ü—Ä–æ—Å–º–æ—Ç—Ä–µ–Ω–æ –∑–∞–∫–æ–Ω–æ–≤: {stats.get('view_law', 0)}

üí¨ **–û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å:**
‚Ä¢ –û—Ç—á–µ—Ç—ã –æ–± –æ—à–∏–±–∫–∞—Ö: {stats.get('bug_report', 0)}
‚Ä¢ –ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è: {stats.get('improvement_suggestion', 0)}
‚Ä¢ –û—Ü–µ–Ω–∫–∏ –æ—Ç–≤–µ—Ç–æ–≤: {stats.get('rate_answer', 0)}

‚≠ê **–°—Ä–µ–¥–Ω–∏–π —Ä–µ–π—Ç–∏–Ω–≥:** {stats.get('avg_rating', 0):.1f}/5.0
            """
            
            await self.bot.send_message(
                chat_id=self.admin_chat_id,
                text=message,
                parse_mode='Markdown'
            )
            logger.info("–ï–∂–µ–¥–Ω–µ–≤–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É")
            
        except TelegramError as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏: {e}")
    
    async def send_error_alert(self, error_type: str, error_message: str, user_id: str = None):
        """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–æ–π –æ—à–∏–±–∫–µ"""
        if not self.enabled:
            return
            
        try:
            message = f"""
üö® **–ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê**

‚ö†Ô∏è **–¢–∏–ø:** {error_type}
üìÖ **–í—Ä–µ–º—è:** {self._get_current_time()}
üë§ **–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:** {user_id or '–ù–µ–∏–∑–≤–µ—Å—Ç–µ–Ω'}

üîç **–î–µ—Ç–∞–ª–∏:**
{error_message}

---
–¢—Ä–µ–±—É–µ—Ç—Å—è –Ω–µ–º–µ–¥–ª–µ–Ω–Ω–æ–µ –≤–Ω–∏–º–∞–Ω–∏–µ!
            """
            
            await self.bot.send_message(
                chat_id=self.admin_chat_id,
                text=message,
                parse_mode='Markdown'
            )
            logger.info(f"–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ {error_type} –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É")
            
        except TelegramError as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ–± –æ—à–∏–±–∫–µ: {e}")
    
    def _get_current_time(self) -> str:
        """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ç–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è –≤ —á–∏—Ç–∞–µ–º–æ–º —Ñ–æ—Ä–º–∞—Ç–µ"""
        from datetime import datetime
        return datetime.now().strftime("%d.%m.%Y %H:%M:%S")
    
    def _get_current_date(self) -> str:
        """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ç–µ–∫—É—â—É—é –¥–∞—Ç—É"""
        from datetime import datetime
        return datetime.now().strftime("%d.%m.%Y")